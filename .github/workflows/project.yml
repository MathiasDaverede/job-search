name: Project

# Run GitHub Actions only on pull requests to stay within the free plan limits (500 MB storage, 2000 minutes/month).
# Pull requests to 'develop' are for feature branches.
# Pull requests to 'main' are for release or hotfix branches.
on:
  pull_request:
    branches: [main, develop]

permissions:
  contents: write # For committing changes to VERSION.md and CHANGELOG.md
  pull-requests: read # For fetching pull request data via GitHub API
  issues: read # For fetching issue titles via GitHub API

jobs:
  test-project:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create .env.local with host data
      run: .github/bin/create_env_local.sh

    - name: Display .env.local
      run: cat .env.local

    - name: Build and start containers
      run: docker compose --env-file .env.local up -d

    - name: Check containers status
      run: |
        docker ps -a
        docker logs job-search-web-1

    - name: Verify host's rights
      run: |
        echo "$(whoami) $(id -u) $(id -g)"
        ls -l 
        echo "Executables files :"
        ls -l bin/

    - name: Verify container's rights in /var/www/
      run: |
        echo "$(docker compose exec web whoami) $(docker compose exec web id -u) $(docker compose exec web id -g)"
        docker compose exec web ls -l /var/ | grep www
        docker compose exec web ls -l /var/www/
        echo  "Executables files :"
        docker compose exec web ls -l /var/www/bin/

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-${{ hashFiles('composer.lock') }}
        restore-keys: composer-

    - name: Cache Importmap dependencies
      uses: actions/cache@v4
      with:
        path: assets/vendor
        key: importmap-${{ hashFiles('importmap.php') }}
        restore-keys: importmap-

    - name: Install Composer dependencies
      run: docker compose exec web composer install --no-interaction --optimize-autoloader
      
    - name: Run Doctrine migrations
      run: docker compose exec web bin/console doctrine:migrations:migrate --no-interaction

    - name: Cache Sass assets
      uses: actions/cache@v4
      with:
        path: var/sass
        key: sass-${{ hashFiles('assets/**/*.scss') }}
        restore-keys: sass-

    - name: Generate Sass assets
      run: docker compose exec web bin/console sass:build

    - name: Check Composer platform requirements
      run: docker compose exec web composer check-platform-reqs

    - name: Check Symfony requirements
      run: docker compose exec web symfony check:requirements

    - name: Check Symfony security issues in project dependencies
      run: docker compose exec web symfony check:security

    - name: Audit importmap
      run: docker compose exec web bin/console importmap:audit

    - name: Unit tests
      run: |
        docker compose exec web bin/console --env=test doctrine:database:create
        docker compose exec web bin/console --env=test doctrine:schema:create
        docker compose exec web bin/console --env=test doctrine:fixtures:load --no-interaction
        docker compose exec web bin/phpunit

    - name: Stop and remove Docker containers
      run: docker compose --env-file .env.local down

    - name: Debug test-project job
      run: |
        echo "Test-project job executed!"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.event.pull_request.head.ref }}"
        echo "Actor: ${{ github.actor }}"

  update-version-changelog:
    # Only if precedent job succeed and come from a pull request on main (release or hotfix)
    needs: test-project
    if: github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches the full Git history to analyse tags
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Update VERSION.md
        run: .github/bin/update_version.sh ${{ github.event.pull_request.head.ref }}

      - name: Set up GitHub CLI
        run: |
          gh version || (echo "Installing GitHub CLI..." && sudo apt-get update && sudo apt-get install -y gh)

      - name: Update CHANGELOG.md
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: .github/bin/update_changelog.sh

      - name: Output files content
        run: |
          echo "Generated version ${{ env.NEW_VERSION }}"
          echo "VERSION.md content:"
          cat VERSION.md
          echo "CHANGELOG.md content:"
          cat CHANGELOG.md

      - name: Commit and push files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION.md CHANGELOG.md
          git commit -m "Update VERSION.md to ${{ env.NEW_VERSION }} and CHANGELOG.md"
          git push origin ${{ env.PR_BRANCH }}

      - name: Debug update-version-changelog job
        run: |
          echo "Update-version-changelog job executed!"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.event.pull_request.head.ref }}"
          echo "Actor: ${{ github.actor }}"
