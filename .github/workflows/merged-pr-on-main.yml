name: Merged PR on main

# Triggered after merging PRs to main from release/X.Y.Z or hotfix/X.Y.Z branches.
on:
  pull_request:
    branches: [main]
    types: [closed] # PR merged

permissions:
  contents: write # For committing changes to VERSION.md and CHANGELOG.md, creating and pushing tags and releases
  pull-requests: read # For fetching pull request data via GitHub API
  issues: read # For rendering issue links in CHANGELOG.md and release notes

jobs:
  # Update VERSION.md and CHANGELOG.md, create tag and release, synchronize develop
  merged-pr-on-main:
    # Prevent closed (abandoned) PR to launch the job
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches the full Git history to analyse tags
      
      - name: Debug job
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Actor: ${{ github.actor }}"
          echo "Head Ref: ${{ github.event.pull_request.head.ref }}"
          echo "Base Ref: ${{ github.event.pull_request.base.ref }}"

      - name: Verify GitHub CLI
        run: gh version

      - name: Update VERSION.md
        run: .github/bin/update_version.sh

      - name: Update CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
        run: .github/bin/update_changelog.sh

      - name: Output files content
        run: |
          echo "VERSION.md content:"
          cat VERSION.md
          echo "CHANGELOG.md content:"
          cat CHANGELOG.md

      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push files
        run: |
          git add VERSION.md CHANGELOG.md
          git commit -m "Update VERSION.md to ${{ env.NEW_VERSION }} and CHANGELOG.md"
          git push origin main

      - name: Create tag
        run: |
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.NEW_VERSION }} --title "${{ env.NEW_VERSION }}" --notes-file CHANGELOG.md --target main
      
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: develop # Checkout the main branch after merge

      - name: Merge main into develop
        run: |
          git merge origin/main
          git push origin develop

      
